bl_info = {
    "name": "Ladybug Tools",
    "author": "Dion Moult",
    "version": (0, 0, 999999),
    "blender": (2, 90, 0),
    "location": "Node Editor",
    "category": "Node",
    "description": "Ladybug, Honeybee, Butterfly, and Dragonfly for Blender",
    "warning": "",
    "wiki_url": "https://wiki.osarch.org/",
    "tracker_url": "https://github.com/ladybug-tools/ladybug-blender"
}

import os
import site

cwd = os.path.dirname(os.path.realpath(__file__))
site.addsitedir(os.path.join(cwd, "lib"))

import sys
import importlib
import nodeitems_utils
import sverchok
from ladybug_tools import icons, sockets
from sverchok.ui.nodeview_space_menu import make_class, layout_draw_categories
from sverchok.ui.nodeview_space_menu import add_node_menu
from sverchok.utils.logging import info, debug

def nodes_index():
    return [("Ladybug", [
        ("ladybug.LB_Out", "SvLBOut"),
        # Generated nodes
        {{#nodes}}
        ("ladybug.{{node_module}}", "Sv{{node_classname}}"),
        {{/nodes}}
    ])]


def make_node_categories() -> list[dict[str, list[str]]]:
    node_categories = [{}]
    for category, nodes in nodes_index():
        nodes = [node_name for idname, node_name in nodes]
        node_categories[0][category] = nodes
    return node_categories


node_categories = make_node_categories()

def make_node_list():
    modules = []
    base_name = "ladybug_tools.nodes"
    index = nodes_index()
    for category, items in index:
        for module_name, node_name in items:
            module = importlib.import_module(f".{module_name}", base_name)
            modules.append(module)
    return modules

imported_modules = make_node_list()

reload_event = False

import bpy

def register_nodes():
    node_modules = make_node_list()
    for module in node_modules:
        module.register()
    info("Registered %s nodes", len(node_modules))

def unregister_nodes():
    global imported_modules
    for module in reversed(imported_modules):
        module.unregister()


class NODEVIEW_MT_AddLBSubcategoryViz(bpy.types.Menu):
    bl_label = "LBSubcategoryViz"
    bl_idname = 'NODEVIEW_MT_AddLBSubcategoryViz'

    def draw(self, context):
        layout = self.layout
        layout_draw_categories(self.layout, self.bl_label, [['SvLBOut']])

make_class('LBSubcategoryViz', 'Ladybug @ Viz')


{{#subcategories}}
class NODEVIEW_MT_AddLBSubcategory{{name}}(bpy.types.Menu):
    bl_label = "LBSubcategory{{name}}"
    bl_idname = 'NODEVIEW_MT_AddLBSubcategory{{name}}'

    def draw(self, context):
        layout = self.layout
        layout_draw_categories(self.layout, self.bl_label, [
            {{#nodes}}
            ['Sv{{.}}'],
            {{/nodes}}
        ])


make_class('LBSubcategory{{name}}', 'Ladybug @ {{title}}')
{{/subcategories}}

# Main menu
class NODEVIEW_MT_EX_LADYBUG_TOOLS_Ladybug(bpy.types.Menu):
    bl_label = 'Ladybug'

    def draw(self, context):
        layout_draw_categories(self.layout, 'Ladybug', [
            ['@ Viz'],
            {{#subcategories}}
            ['@ {{title}}'],
            {{/subcategories}}
        ])


add_node_menu.append_from_config(node_categories)

def register():
    debug("Registering ladybug_tools")

    icons.register()
    sockets.register()
    bpy.utils.register_class(NODEVIEW_MT_EX_LADYBUG_TOOLS_Ladybug)
    register_nodes()
    bpy.utils.register_class(NODEVIEW_MT_AddLBSubcategoryViz)
    {{#subcategories}}
    bpy.utils.register_class(NODEVIEW_MT_AddLBSubcategory{{name}})
    {{/subcategories}}
    add_node_menu.register()

def unregister():
    unregister_nodes()
    bpy.utils.unregister_class(NODEVIEW_MT_AddLBSubcategoryViz)
    {{#subcategories}}
    bpy.utils.unregister_class(NODEVIEW_MT_AddLBSubcategory{{name}})
    {{/subcategories}}
    sockets.unregister()
    icons.unregister()
